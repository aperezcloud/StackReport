#!/bin/bash
# StackReport API DB Script

# Stop on errors
set -e
set -u

#Database name
HOST_NAME=${2:-localhost}

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|start|stop)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
      echo "CREATING DATABASE"
      psql \
        -h $HOST_NAME \
        -f predictions_database/sql/create.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "POPULATING DATABASE"
      psql \
        -h $HOST_NAME \
        -f predictions_database/sql/populate_mutual_fund.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      psql \
        -h $HOST_NAME \
        -f predictions_database/sql/populate_stock.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "SUCCESSFULLY CREATED DATABASE"
    ;;

  "destroy")
      echo "DESTROYING DATABASE"
      psql -c "DROP DATABASE predictions"
      echo "DROPPED DATABASE"
    ;;

  "reset")
      bin/db destroy
      bin/db create
    ;;

  "start")
      pg_ctl -D /usr/local/var/postgres start && service posgresql start
    ;;
    "stop")
      service postgresql stop
    ;;
  *)
    usage
    exit 1
    ;;
esac

# psql -f sql/create.sql --echo-all 
