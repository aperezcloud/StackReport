#!/bin/bash
# StackReport API DB Script

# Stop on errors
set -e
set -u

#Database name
HOST_NAME=${2:-localhost}

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|create-fake|destroy|reset|start|stop)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
      echo "CREATING DATABASE"
      psql \
        -h $HOST_NAME \
        -f sql/create.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "POPULATING DATABASE"
      psql \
        -h $HOST_NAME \
        --echo-all \
        --set ON_ERROR_STOP=on \
        < var/dump_clean
      echo "SUCCESSFULLY CREATED DATABASE"
    ;;
  "create")
      echo "CREATING DATABASE"
      psql \
        -h $HOST_NAME \
        -f sql/create.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "POPULATING DATABASE"
      psql \
        -h $HOST_NAME \
        -f sql/populate.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "SUCCESSFULLY CREATED DATABASE"
    ;;

  "create-fake")
      echo "CREATING DATABASE"
      psql \
        -h $HOST_NAME \
        -f sql/create.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "POPULATING DATABASE WITH REAL FAKE DATA"
      psql \
        -h $HOST_NAME \
        -f sql/realFakeData.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "SUCCESSFULLY CREATED DATABASE"
    ;;

  "destroy")
      echo "DESTROYING DATABASE"
      psql \
        -h $HOST_NAME \
        -f sql/drop.sql \
        --echo-all \
        --set ON_ERROR_STOP=on
      echo "DROPPED TABLES"
      psql -c "DROP DATABASE stackreport"
      echo "DROPPED DATABASE"
    ;;

  "reset")
      bin/db destroy
      bin/db create
    ;;

  "start")
      pg_ctl -D /usr/local/var/postgres start && brew services start postgresql
    ;;
    "stop")
      brew services stop postgresql
    ;;
    "random")
      echo "Still need to implement"
    ;;
  *)
    usage
    exit 1
    ;;
esac

# psql -f sql/create.sql --echo-all 
